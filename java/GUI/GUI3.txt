swing开始................

JFrame继承自Frame
javax.swing.JFrame 

1.模拟四则运算:

label: 显示文字 -->右键"编辑文本"
文本字段: 输入文字或数字
组合框:有下拉菜单选项。+,-,*,/

新建项目--->在源包下,新建java包--->新建JFrame窗体.窗体名就是类名，所以需要首字母大写

拖动需要的组件:
文本字段是输入框，将来要获取值，或者进行一些操作，所以选择文本框，右键"更改变量名称"---num1 和 num2
组合框是下拉选择框,"更改变量名称" ---cao ,在属性-->找到model-->...-->每行写一个下拉框的菜单项

切换到源代码这边:
找到当前文件(NewJFrame.java)的无参构造:
	public NewJFrame(){
		...
		init();  //新建一个初始化方法
	}
	private void init(){
		this.setTitle("模拟四则运算"); //设置窗体标题
	}

给button绑定事件:
	选中button-->右键:事件-->Action - actionPerformed (动作监听) 
	
   private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
		 //获取第一个操作数
        //this.文本框的变量名.getText() 拿到文本框输入的值。 trim()去掉前后空格
        String num1String = this.num1.getText().trim();
        //获取运算符
        //this.组合框的变量名.getselectedItem() 拿到组合框被选中项的对象，然后转为字符串。
        String caoString = this.cao.getSelectedItem().toString();
        
        //获取第二个操作数
        String num2String = this.num2.getText().trim();
        
        //输出。12---*-----66
        System.out.println(num1String+"---"+caoString+"-----"+num2String);
        
        //把字符串转换为整数
        int num1int = Integer.parseInt(num1String);
        int num2int = Integer.parseInt(num2String);
        
        //定义接受结果
        int result = 0;
        switch(caoString){
            case "+":
                result = num1int + num2int;
                break;
            case "-":
                result = num1int - num2int;
                break;
            case "*":
                result = num1int * num2int;
                break;
            case "/":
                result = num1int / num2int;
                break;
        }
        //把结果赋给结果框。 String.valueOf是将整数转为字符串。
        this.res.setText(String.valueOf(result));
		
    }
	
2. 给界面换一个图标
新建一个cn.itcast.resource包-->存放图片资源
新建一个cn.itcast.util包 --->新建一个UiUtil.java类(专门做界面效果的类)

NewJFrame.java 
	import it.utils.UiUtil;
	    private void init(){
        this.setTitle("模拟四则运算");
        //传入当前类的对象this。
        UiUtil.setFrameImage(this); 
    } 

UiUtil.java 
public class UiUtil {
    //创建私有构造
    private UiUtil(){}
    
    //修改窗体小图标。NewJFrame继承自JFrame,传入窗体对象
    public static void setFrameImage(JFrame jf){
        //获取工具类对象
        //public static Toolkit getDefaultToolkit(); 获取默认工具包
        Toolkit tk = Toolkit.getDefaultToolkit();
        //根据相对路径获取图片对象。这个路径是当前基于包的相对路径
        Image image = tk.getImage("src\\it\\resource\\man.jpg");
        //给窗体设置图片.是窗体对象jf
        jf.setIconImage(image);
    }
}

3.设置窗体居中
1.获取屏幕的宽和高
2.获取窗体的宽和高
3.新的宽=(屏幕的宽-窗体的宽)/2
新的高=(屏幕的高-窗体的高)/2

NewJFrame.java 
	 private void init(){
        this.setTitle("模拟四则运算");
        //传入当前类的对象this。
        UiUtil.setFrameImage(this); 
		//传入当前类的对象this。
        UiUtil.setFrameCenter(this);
    }
UiUtil.java 
	 //设置窗体居中。传入窗体对象
    public static void setFrameCenter(JFrame jf){
        
        //获取工具对象
        Toolkit tk = Toolkit.getDefaultToolkit();
        //获取屏幕宽和高
        Dimension d = tk.getScreenSize(); //Dimension类里面封装了宽和高
        double screenWidth = d.getWidth(); //屏幕宽
        double screenHeight = d.getHeight(); //屏幕高
        //获取窗体的宽和高
        int frameWidth = jf.getWidth(); //窗体宽
        int frameHeight = jf.getHeight(); //窗体高
        //获取新的宽高。设置窗体坐标用int类型
        int width = (int)(screenWidth-frameWidth)/2;
        int height = (int)(screenHeight-frameHeight)/2;
        //设置窗体坐标。
        jf.setLocation(width,height);
    }
	
4.更换皮肤包
导入java皮肤包jar文件，自己选择试试，没啥必要性。

5.校验数字
..........（获取数据之后进行校验）

//数据正则校验，必须是数字字符串
String regex = "\\d+";
//校验第一个数字
//当不匹配时
if(!num1String.matches(regex)){
	//System.out.println("数据不匹配");
	//JOptionPane弹窗类
	JOptionPane.showMessageDialog(this,"第一个操作数不满足要求，必须是数字"); //第一个参数是当前窗体的对象,第二个参数是弹出窗体的消息内容。
	this.num1.setText(""); //给当前窗口的值为空
	this.num1.requestFocus(); //获取光标到当前窗口
	return ; //执行不在继续向下执行，从头开始重新执行。
}
//校验第二个数字
if(!num2String.matches(regex)){
	JOptionPane.showMessageDialog(this,"第二个操作数不满足要求，必须是数字");
	this.num2.setText("");
	this.num2.requestFocus();
	return;
}

..........（在数据转之前进行校验）
