java小列子:

从键盘输入数字，比较得出最大值

```java
import java.util.Scanner;

class Fun{
	public static void main(String args[]){
	//创建键盘录入对象
	Scanner sc=new Scanner(System.in);
	
	System.out.println("请输入第一个数据:");
	int a=sc.nextInt();
	
	System.out.println("请输入第二个数据:");
	int b=sc.nextInt();
	
	int result=getMax(a,b)
	System.out.println("较大值是:"+result);
	
	}
	public static int getMax(int a,int b){
	//方法定义了返回类型，所以必须要用返回值。
	//if 语句
	if(a>b){
		//System.out.println(a);
		return a;
	}else{
		//System.out.println(b);
		return b;
	}
	}
}
```


0.方法
class Demo{
    public static void main(){
        int a = 10;

    }
}

1.面向对象：
1.1面向对象基础
//StudentDemo.java

//基本类
class Student   
{
    //成员变量---->类的属性。
    String name;   //null。
    int age;    //0
    //成员方法--->类的方法。
    public void study()  
    {
        System.out.println("good study!");
    }
}
//测试类
class StudentDemo 
{
    public static void main(String[] args)
    {
        Student s = new Student();  //创建对象s
        System.out.println(s.name+"-----");  //使用成员变量
        s.name="腾斋飞鸟";  //给成员变量赋值
        s.study(); //使用成员方法
    }
}

1.12基本类中常见方法
class Phone{
    private int price; //私有成员变量

    //获取成员变量
    public int getPrice(){  
        return price;
    }
    //设置成员变量
    public void setPrice(int pri){
        this.price = pri;  //传入的值被赋值给这个对象的成员变量。
    }
    //设置成员变量2.0。封装对成员变量进行校验值。
    //对成员变量age进行校验，只有对象给成员变量赋值为合法数据时,才能进行赋值。
    public void setPrice(int pri) {
		if(pri < 0 || pri > 3000) {
			System.out.println("手机的定价有问题！");  // ||表示或者
		}else {
			this.price=price;
		}
	}
}
class Phone{
    private String brand;
    //通过方法使用成员变量
    public void call(String name){
		System.out.println("this is calling "+name+"打电话");
	}
    //姓名获取值
	public String getName() {
		return name;
	}
	//姓名设置值
	public void setName(String n) {
		name = n;
}
//Phone p = new Phone();
//p.setName("mi");  传参调用。//通过对象名给成员方法传入参数
//类名 对象名 = new 类名();
//【高级版输出】
System.out.println("price is : "+mi.getPrice());
		

1.2方法的形式参数类型:
形式参数是用来暂时替要传入的参数站位置的。
形式参数的问题：
	基本类型：形参的改变不影响实际参数
	引用类型：形参的改变直接影响实际参数
1.21基本类型
class Student {
		// 形式参数是基本类型；  
		public int sum(int a,int b) {    //形式参数表示的是，这里将来需要传入的int数据类型的a和b。
				return a + b;
		}
        public void show() { 
				System.out.println("我爱学习");
		}
}
1.22引用类型
//形式参数是引用类型
//形式参数是一个类类型(引用类型)，这里其实需要的是该类的对象。
//调用的时候，把main方法中的s的地址传递到了这里 Student s = new Student();
class StudentDemo {
		public void method(Student s1) { 		//这里表示的是，将来会传入student类的对象，暂时使用s1来表示站位。
				s1.show();
		}
}

StudentDemo sd = new StudentDemo();
Student s = new Student();

int result = s.sum(10,20);    //形式参数是基本类型的调用	
sd.method(s); //把s的地址给到了这里

