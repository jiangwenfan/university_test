0.1
基本的单位关系:
1byte(字节) == 2个十六进制数 == 8bit(位) ----------------->AH,AL
1word(字) == 2byte(字节) == 4个十六进制数 == 16bit(位) ------->ax
1dword(双字) == 4byte(字节) == 32bit(位) ----->eax
1个byte(字节)== 2个十六进制数
0.
物理地址：所以内存单元构成的存储空间是一个一维的线性空间，每一个内存单元在这个空间中都有唯一的地址，这个地址就叫做物理地址。
CPU通过地址总线向存储器发送一个内存单元的物理地址，不同的CPU有不同的在CPU内部生成物理地址的方式。
8080,8085是8位机
8086是16位机,16位结构(字长为16位)的CPU,即：运算器一次最多处理16位的数据；寄存器的最大宽度为16位；寄存器和运算器之间的通路为16位。也就是在8086内部，能够一次性处理，传输，暂时存储信息的最大长度是16位。

物理地址=段地址(H)*16(DEC)+偏移地址(H)
物理地址=段地址(H)*10(H)+偏移地址(H)
CS=2AE3H IP=0003H 物理地址:2AE3*10+3=2AE30+3=2AE33

jmp 2AE3:3 //修改CS:IP寄存器的内容
jmp eax //仅修改IP寄存器


1.Debug是DOS,windows提供的实模式程序的调试工具。

r //查看寄存器的内容
cs和ip寄存器的值，是当前cpu要读取的指令的地址。
r ip //修改ip寄存器的值

d 1000:0 //查看内存10000H处的内容，128个内存单元  d 段地址:偏移地址
d //接着使用d命令，可以列出后续内容。
d 1000:0 9 //查看内存中1000:0~1000:9的内容

e 1000:0 0 1 2 3 4 5 6 7 8 9 //使用e命令改写内存中的数据
d 1000:0 f //查看刚才改写好的数据

u 1000:0 1f //将机器码翻译为汇编指令
t //向下执行

a 1000:0 mov ax,10x  //以汇编指令的形式在内存中写入机器指令
d 1000:0 f //查看写入结果

2.第一个汇编程序
assume cs:codesg
	codesg segment
		mov ax,0123H
		mov bx,0456H
		add ax,bx
		add ax,ax
		
		mov ax,4c00H   //程序返回
		int 21H
	codesg ends
end

//codesg段开始到结束。一个汇编程序由多个段组成，段存放代码，数据，当栈空间使用
//end是汇编程序的结束标志。
//assume用来关联程序中的段与寄存器的关系。
常识:
一个p2.exe程序想要运行，必须依靠正在运行的p1程序，将p2程序载入内存中，并将CPU的控制权
交给p2，p2才能得以运行。
p2开始运行后，p1暂停。当p2运行完毕后，应当将CPU控制权交还给p1程序，使它得以运行。
一个程序运行完毕后，将CPU的控制权交还给使它得以运行的程序，这个过程叫做"程序返回"。
2.1编译源程序
edit 是一个dos下的文本编辑器
//文件保存为1.asm。 采用微软的masm5.0汇编编译器
masm 
	1 //输入文件名
	2 //输出文件名
	//忽略编译产生的中间结果
	
2.2链接程序
//文件名2.obj 采用微软的overlay linker3.60连接器
link 
	2 //输入文件名 
	3 //要输出的文件名 3.exe 
2.3 简化编译和链接
masm 1 //编译，生成1.obj 
link 1 //链接，生成1.exe 

2.4 1.exe程序执行
1.exe //直接运行没有任何显示。是由command将程序从可执行文件载入内存

2.5 跟踪程序

安装环境:
1.在masm32官网下载sdk
https://www.masm32.com/download.htm
2.解压，安装,配置环境变量
C:\masm32\bin
>link

3.



