#冒泡排序:
import random

def bubble_sort(li):
	for i in range(len(li)-1): #需要排列列表长度个数-1趟。因为最后一个数字不用排。从第0趟开始。需要0,1,2,3,len(li)-1-1趟
		for j in range(len(li)-i-1): #指针的下标位置。
			if li[j] > li[j+1]:
				li[j],li[j+1] = li[j+1],li[j]

#li = [random.randint(0,1000) for i in range(1000)]
li = [9,2,8,1,4,5,3,7,6,2]
print(li)
bubble_sort(li)
print(li)

#自己实现的
def bubble_sort1(li):
    for i in range(1,len(li)): #i表示需要多少趟，需要1,2,3,4,len(li)-1趟
        #for j in range(len(li)-1): #j表示指针的下标。从0开始，即0,1,2,3,len(li)-1-1。
        #len(li)-1表示总共最大的个数是8个数字，第一趟最大指到len(li)-1个数字上，其下标是len(li)-1-1。
        #但是第二趟的时候,最大指到len(li)-1-1。
        #第三趟..len(li)-1-1-1 
        #.....也就是每次最大数字都要减去1.
        for j in range(len(li)-i): #表示每趟所要值的数字最大是列表长度-趟数，range表示其下标
            if li[j] > li[j+1]:
                li[j],li[j+1] = li[j+1],li[j]
        
        
#冒泡排序核心思想步骤:
[9,8,7,6,5,4,3,2,1]
冒泡算法的核心思想是:从列表中依次拿出一个数，和其右边的数字进行比较，如果大于就向右交换,每一趟都会找到里面最大的一个数字，并且在最右边。
eg：9 > 8 --->8,9  -->9大于8所以交换，
    8 > 7 --->7,8
冒泡排序一共需要len(a)-1趟,因为9个数，比较第八个数和第九个数的时候，比较完剩下的哪一个数的大小就已经被比出来了。
每一趟需要

每一趟指针都是从0开始,没趟中的指针都是从0开始递增，
第一趟，9个数，递增到8，下标是8-1
第二趟，8个数，递增到7,最大下标是7-1
....
由于每次指针递增的最大值都是不一样的，受第几趟这个变量的影响，所以range(len(li)-i-1)